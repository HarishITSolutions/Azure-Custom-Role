
# Azure Pipeline that run basic continuous integration on a Terraform project
# Running Pipeline from Main Branch, Creating artifacts, Publishing the artifacts and create plan.out

#trigger: none # Disable CI triggers.

trigger:
 branches:
   include:
   - "*"
   exclude:
   - dev
pool:
  vmImage: ubuntu-latest

parameters:
- name: environmentType
  displayName: "Environment Type:"
  default: 'Sandbox'
  values:
  - 'Sandbox'
  - 'Prod'
- name: policyInitiativeDeployment
  displayName: "Policy Initiative Deployment"
  type: boolean
  default: true
- name: Assignments
  displayName: "MG RA Policy's Assignment"
  type: boolean
  default: true

variables:
  - group: 'Constants for Azure Build Sandbox'
  - group: 'Constants for Azure Build Prod' 
  - name: "client_id"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: $(clientID_Sandbox)
    ${{ else }}:
      value: $(clientID_Production)
  - name: "client_secret"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: $(clientSecret_Sandbox)
    ${{ else }}:
      value: $(clientSecret_Production)
  - name: "tenant_id"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: $(tenant_id_Sandbox)
    ${{ else }}:
      value: $(tenant_id_Production)
  - name: "subscription_id"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: $(subscription_id_Sandbox)
    ${{ else }}:
      value: $(subscription_id_Production)
  - name: "sourcePolicy-YAML"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(sourcePolicyYAMLSandbox)"
    ${{ else }}:
      value: "$(sourcePolicyYAMLProd)"
  - name: "sourceMGYAML"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(sourceMGYAMLSandbox)"
    ${{ else }}:
      value: "$(sourceMGYAMLProd)"
  - name: "Storage"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(StorageSandbox)"
    ${{ else }}:
      value: "$(StorageProd)"
  - name: "Container"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(ContainerSandbox)"
    ${{ else }}:
      value: "$(ContainerProd)"
  - name: "RG"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(RGSandbox)"
    ${{ else }}:
      value: "$(RGProd)"
  - name: "policyStateFile"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(PolicyStateFileSandbox)"
    ${{ else }}:
      value: "$(PolicyStateFileProd)"
  - name: "MGRAStateFile"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(MGRAStateFileSandbox)"
    ${{ else }}:
      value: "$(MGRAStateFileProd)"
  - name: "accessKey"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "$(accessKeySandbox)"
    ${{ else }}:
      value: "$(accessKeyProd)"
  - name: "artifact"
    ${{ if eq(parameters.environmentType, 'Sandbox') }}:
      value: "sandbox-artifact"
    ${{ else }}:
      value: "prod-artifact"
  - name: "artifact-policy"
    ${{ if eq(parameters.policyInitiativeDeployment, 'true') }}:
      value: "policy"
  - name: "artifact-MG"
    ${{ if eq(parameters.Assignments, 'true') }}:
      value: "MG"
  
    

stages:
  - stage: Build Process
    displayName: Build Process
    jobs:
    - deployment: Fetching_Agent_IP
      displayName: Fetching_Agent_IP
      environment: 'sandbox'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: PowerShell@2
              displayName: "Microsoft Agent IP"
              continueOnError: false
              inputs:
                targetType: 'inline'
                script: |
                  $ip = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
                  Write-Host "ip is : $ip"
  
  - stage: Policy_Initiative_Deployement
    condition: eq('${{ parameters.policyInitiativeDeployment }}', 'true')
    displayName: Deployement of Policy and Initiative 
    jobs:
    - job: ContinuousIntegrationJob
      displayName: ContinuousIntegrationJob
      steps:
        - task: AzurePowerShell@5
          inputs:
                azureSubscription: 'prod-devops'
                ScriptType: 'InlineScript'
                Inline: |
                  $ip = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
                  Write-Host "ip is : $ip"
                  Connect-AzAccount -Subscription '567-gevernovabuildtestsub'
                  Add-AzStorageAccountNetworkRule -ResourceGroupName "$(RG)" -Name "$(Storage)" -IPAddressOrRange "$ip"
                  Start-Sleep -s 20
                azurePowerShellVersion: 'LatestVersion'
          displayName: 'Adding agent IP in storage account'
          continueOnError: false

        - task: TerraformCLI@0
          displayName: 'Terraform Init'
          continueOnError: false
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            commandOptions: '-reconfigure -backend-config="storage_account_name=$(Storage)" -backend-config="container_name=$(Container)" -backend-config="key=$(policyStateFile)" -backend-config="access_key=$(accessKey)"'
            allowTelemetryCollection: true

        - task: TerraformCLI@0
          displayName: 'Terraform Validate'
          continueOnError: false
          inputs:
            command: 'validate'
            allowTelemetryCollection: true
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformCLI@0
          displayName: 'Terraform Plan'
          continueOnError: false
          inputs:
            command: 'plan'
            commandOptions: '-target="module.PolicyandInitiativeCreation" -var sourcePolicyYAML=$(sourcePolicy-YAML) -var subscriptionID=$(subscription_id) -var tenantID=$(tenant_id) -var clientID=$(client_id) -var clientSecret=$(client_secret) -var sourceMG-YAML=$(sourceMGYAML)'
            allowTelemetryCollection: true
            workingDirectory: '$(System.DefaultWorkingDirectory)'
        
        - task: ArchiveFiles@2
          displayName: 'Create Plan Artifact'
          continueOnError: false
          inputs:
            rootFolderOrFile: '$(Build.SourcesDirectory)'
            includeRootFolder: false
            archiveType: 'tar'
            tarCompression: 'gz'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(artifact-policy)-$(artifact).tgz'
            replaceExistingArchive: true
        
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Plan Artifact'
          continueOnError: false
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: '$(Build.BuildId)-$(artifact-policy)-$(artifact)-tfplan'
            publishLocation: 'Container'
        
        - task: TerraformCLI@0
          displayName: 'Publish Plan to plan.out'
          continueOnError: false
          inputs:
            command: 'plan'
            commandOptions: '-target="module.PolicyandInitiativeCreation" -var sourcePolicyYAML=$(sourcePolicy-YAML) -var subscriptionID=$(subscription_id) -var tenantID=$(tenant_id) -var clientID=$(client_id) -var clientSecret=$(client_secret) -var sourceMG-YAML=$(sourceMGYAML)'
            allowTelemetryCollection: true
            publishPlanResults: 'plan.out' 

        - task: AzurePowerShell@5
          inputs:
                azureSubscription: 'prod-devops'
                ScriptType: 'InlineScript'
                Inline: |
                  $ip = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
                  Write-Host "ip is : $ip"
                  Connect-AzAccount -Subscription '567-gevernovabuildtestsub'
                  Remove-AzStorageAccountNetworkRule -ResourceGroupName "$(RG)" -Name "$(Storage)" -IPAddressOrRange "$ip"
                  Start-Sleep -s 20
                azurePowerShellVersion: 'LatestVersion'
          displayName: "Removal of Agent IP in Storage Account"
          continueOnError: false

  - stage: MG_RA_Policy_INI_Assignments
    condition: eq('${{ parameters.Assignments }}', 'true')
    displayName: MG RA Policy and Initiative Assignment
    jobs:
    - job: ContinuousIntegrationJob
      displayName: ContinuousIntegrationJob
      steps:
        - task: AzurePowerShell@5
          inputs:
                azureSubscription: 'prod-devops'
                ScriptType: 'InlineScript'
                Inline: |
                  $ip = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
                  Write-Host "ip is : $ip"
                  Connect-AzAccount -Subscription '567-gevernovabuildtestsub'
                  Add-AzStorageAccountNetworkRule -ResourceGroupName "$(RG)" -Name "$(Storage)" -IPAddressOrRange "$ip"
                  Start-Sleep -s 20
                azurePowerShellVersion: 'LatestVersion'
          displayName: 'Adding agent IP in storage account'
          continueOnError: false

        - task: TerraformCLI@0
          displayName: 'Terraform Init'
          continueOnError: false
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            commandOptions: '-reconfigure -backend-config="storage_account_name=$(Storage)" -backend-config="container_name=$(Container)" -backend-config="key=$(MGRAStateFile)" -backend-config="access_key=$(accessKey)"'
            allowTelemetryCollection: true
          

        - task: TerraformCLI@0
          displayName: 'Terraform Validate'
          continueOnError: false
          inputs:
            command: 'validate'
            allowTelemetryCollection: true
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformCLI@0
          displayName: 'Terraform Plan'
          continueOnError: false
          inputs:
            command: 'plan'
            commandOptions: '-target="module.MG-RA-POL-INI-Assignment" -var sourcePolicyYAML=$(sourcePolicy-YAML) -var subscriptionID=$(subscription_id) -var tenantID=$(tenant_id) -var clientID=$(client_id) -var clientSecret=$(client_secret) -var sourceMG-YAML=$(sourceMGYAML)'
            allowTelemetryCollection: true
            workingDirectory: '$(System.DefaultWorkingDirectory)'
        
        - task: ArchiveFiles@2
          displayName: 'Create Plan Artifact'
          continueOnError: false
          inputs:
            rootFolderOrFile: '$(Build.SourcesDirectory)'
            includeRootFolder: false
            archiveType: 'tar'
            tarCompression: 'gz'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(artifact-MG)-$(artifact).tgz'
            replaceExistingArchive: true
        
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Plan Artifact'
          continueOnError: false
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: '$(Build.BuildId)-$(artifact-MG)-$(artifact)-tfplan'
            publishLocation: 'Container'
        
        - task: TerraformCLI@0
          displayName: 'Publish Plan to plan.out'
          continueOnError: false
          inputs:
            command: 'plan'
            commandOptions: '-target="module.MG-RA-POL-INI-Assignment" -var sourcePolicyYAML=$(sourcePolicy-YAML) -var subscriptionID=$(subscription_id) -var tenantID=$(tenant_id) -var clientID=$(client_id) -var clientSecret=$(client_secret) -var sourceMG-YAML=$(sourceMGYAML)'
            allowTelemetryCollection: true
            publishPlanResults: 'plan.out' 

        - task: AzurePowerShell@5
          inputs:
                azureSubscription: 'prod-devops'
                ScriptType: 'InlineScript'
                Inline: |
                  $ip = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
                  Write-Host "ip is : $ip"
                  Connect-AzAccount -Subscription '567-gevernovabuildtestsub'
                  Remove-AzStorageAccountNetworkRule -ResourceGroupName "$(RG)" -Name "$(Storage)" -IPAddressOrRange "$ip"
                  Start-Sleep -s 20
                azurePowerShellVersion: 'LatestVersion'
          displayName: "Removal of Agent IP in Storage Account"
          continueOnError: false